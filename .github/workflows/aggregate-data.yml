name: Aggregate & Deploy HiveX data

on:
  push:
    branches:
      - "project/**"     # project branches
      - main             # include if you also want main merges to publish
  workflow_dispatch: {}

concurrency:
  group: hivex-data-deploy
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Generate aggregated data
        run: |
          COMMIT=$(git rev-parse --short HEAD)
          TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          mkdir -p data_out
          
          # Run the aggregation script
          node scripts/aggregate-data.js

      - name: Add Vercel project metadata + headers
        run: |
          mkdir -p data_out/.vercel
          printf '{"projectId":"%s","orgId":"%s"}' "$VERCEL_PROJECT_ID" "$VERCEL_ORG_ID" > data_out/.vercel/project.json
          cat > data_out/vercel.json << 'JSON'
          {
            "headers": [
              {
                "source": "/(.*)",
                "headers": [
                  { "key": "Access-Control-Allow-Origin", "value": "https://hivex.aiandme.io" },
                  { "key": "Access-Control-Allow-Methods", "value": "GET, OPTIONS, HEAD" },
                  { "key": "Access-Control-Allow-Headers", "value": "Content-Type, Authorization, X-Requested-With, Cache-Control" },
                  { "key": "Access-Control-Max-Age", "value": "86400" },
                  { "key": "Cache-Control", "value": "public, max-age=60, s-maxage=60" }
                ]
              },
              {
                "source": "/api/(.*)",
                "headers": [
                  { "key": "Access-Control-Allow-Origin", "value": "https://hivex.aiandme.io" },
                  { "key": "Access-Control-Allow-Methods", "value": "GET, OPTIONS, HEAD" },
                  { "key": "Access-Control-Allow-Headers", "value": "Content-Type, Authorization, X-Requested-With, Cache-Control" },
                  { "key": "Access-Control-Max-Age", "value": "86400" }
                ]
              },
              {
                "source": "/(.*\\.json)",
                "headers": [
                  { "key": "Access-Control-Allow-Origin", "value": "https://hivex.aiandme.io" },
                  { "key": "Access-Control-Allow-Methods", "value": "GET, OPTIONS, HEAD" },
                  { "key": "Access-Control-Allow-Headers", "value": "Content-Type, Authorization, X-Requested-With, Cache-Control" },
                  { "key": "Access-Control-Max-Age", "value": "86400" }
                ]
              }
            ]
          }
          JSON
          
          # Also create _headers file as backup CORS method
          cat > data_out/_headers << 'HEADERS'
          /*
            Access-Control-Allow-Origin: https://hivex.aiandme.io
            Access-Control-Allow-Methods: GET, OPTIONS, HEAD
            Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With, Cache-Control
            Access-Control-Max-Age: 86400
            Cache-Control: public, max-age=60, s-maxage=60

          /api/*
            Access-Control-Allow-Origin: https://hivex.aiandme.io
            Access-Control-Allow-Methods: GET, OPTIONS, HEAD
            Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With, Cache-Control
            Access-Control-Max-Age: 86400

          *.json
            Access-Control-Allow-Origin: https://hivex.aiandme.io
            Access-Control-Allow-Methods: GET, OPTIONS, HEAD
            Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With, Cache-Control
            Access-Control-Max-Age: 86400
          HEADERS
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Deploy to Vercel (prod)
        run: |
          vercel deploy --prod --yes \
            --token "${VERCEL_TOKEN}" \
            ${VERCEL_SCOPE:+--scope "$VERCEL_SCOPE"} \
            --cwd data_out
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_SCOPE: ${{ secrets.VERCEL_SCOPE }}
